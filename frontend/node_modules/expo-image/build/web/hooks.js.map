{"version":3,"file":"hooks.js","sourceRoot":"","sources":["../../src/web/hooks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAIrD,OAAO,EAAE,WAAW,EAAE,MAAM,+BAA+B,CAAC;AAC5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAC;AAC5D,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;AAExE,MAAM,UAAU,YAAY,CAAC,MAAsC;IACjE,MAAM,WAAW,GAAG,iBAAiB,CAAC,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;IACzD,MAAM,uBAAuB,GAAG,MAAM,EAAE,GAAG,EAAE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;IAC/E,MAAM,eAAe,GAAG,OAAO,CAC7B,GAAG,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,wBAAwB,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EACvF,CAAC,uBAAuB,EAAE,WAAW,CAAC,CACvC,CAAC;IACF,OAAO,CAAC,eAAe,EAAE,WAAW,CAAU,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,MAAsC;IACnE,MAAM,CAAC,SAAS,EAAE,iBAAiB,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;IAC5D,MAAM,CAAC,QAAQ,EAAE,gBAAgB,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IACzD,OAAO,OAAO,CAAC,GAAG,EAAE;QAClB,IAAI,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,EAAE;YAC3C,OAAO,EAAE,cAAc,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;SACvD;QACD,IAAI,CAAC,QAAQ,IAAI,CAAC,SAAS,EAAE;YAC3B,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;SACpD;QACD,OAAO;YACL,cAAc,EAAE,QAAQ,IAAI,SAAS;YACrC,WAAW,EAAE,IAAI;SAClB,CAAC;IACJ,CAAC,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC,CAAC;AACzE,CAAC;AAED,MAAM,UAAU,UAAU,CACxB,MAAsC,EACtC,WAA4C,EAC5C,OAAwB;IAExB,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IAChE,SAAS,CAAC,GAAG,EAAE;QACb,CAAC,KAAK,IAAI,EAAE;YACV,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;gBACnC,OAAO;aACR;YACD,IAAI;gBACF,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE;oBACrC,OAAO,EAAE,MAAM,CAAC,OAAO;oBACvB,KAAK,EAAE,WAAW,KAAK,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS;oBACtD,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;oBACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;iBACjF;gBACD,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;gBACjC,YAAY,CAAC,CAAC,UAAU,EAAE,EAAE;oBAC1B,IAAI,UAAU,EAAE;wBACd,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;qBACjC;oBACD,OAAO,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;gBACH,6DAA6D;aAC9D;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,EAAE,CAAC;IACP,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACb,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE;QACpB,OAAO,MAAM,CAAC;KACf;IACD,IAAI,CAAC,SAAS,EAAE;QACd,0DAA0D;QAC1D,OAAO,IAAI,CAAC;KACb;IACD,OAAO,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC;AACvC,CAAC","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\n\nimport { OnErrorEvent } from './ImageWrapper.types';\nimport { ImageNativeProps, ImageSource } from '../Image.types';\nimport { useBlurhash } from '../utils/blurhash/useBlurhash';\nimport { isThumbhashString } from '../utils/resolveSources';\nimport { thumbHashStringToDataURL } from '../utils/thumbhash/thumbhash';\n\nexport function useThumbhash(source: ImageSource | null | undefined) {\n  const isThumbhash = isThumbhashString(source?.uri || '');\n  const strippedThumbhashString = source?.uri?.replace(/thumbhash:\\//, '') ?? '';\n  const thumbhashSource = useMemo(\n    () => (isThumbhash ? { uri: thumbHashStringToDataURL(strippedThumbhashString) } : null),\n    [strippedThumbhashString, isThumbhash]\n  );\n  return [thumbhashSource, isThumbhash] as const;\n}\n\nexport function useImageHashes(source: ImageSource | null | undefined) {\n  const [thumbhash, isThumbhashString] = useThumbhash(source);\n  const [blurhash, isBlurhashString] = useBlurhash(source);\n  return useMemo(() => {\n    if (!isThumbhashString && !isBlurhashString) {\n      return { resolvedSource: source, isImageHash: false };\n    }\n    if (!blurhash && !thumbhash) {\n      return { resolvedSource: null, isImageHash: true };\n    }\n    return {\n      resolvedSource: blurhash ?? thumbhash,\n      isImageHash: true,\n    };\n  }, [blurhash, thumbhash, isThumbhashString, isBlurhashString, source]);\n}\n\nexport function useHeaders(\n  source: ImageSource | null | undefined,\n  cachePolicy: ImageNativeProps['cachePolicy'],\n  onError?: OnErrorEvent[]\n): ImageSource | null | undefined {\n  const [objectURL, setObjectURL] = useState<string | null>(null);\n  useEffect(() => {\n    (async () => {\n      if (!source?.headers || !source.uri) {\n        return;\n      }\n      try {\n        const result = await fetch(source.uri, {\n          headers: source.headers,\n          cache: cachePolicy === 'none' ? 'no-cache' : 'default',\n          redirect: 'follow',\n        });\n        if (!result.ok) {\n          throw new Error(`Failed to fetch image: ${result.status} ${result.statusText}`);\n        }\n        const blob = await result.blob();\n        setObjectURL((prevObjURL) => {\n          if (prevObjURL) {\n            URL.revokeObjectURL(prevObjURL);\n          }\n          return URL.createObjectURL(blob);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      } catch (error) {\n        onError?.forEach((e) => e?.({ source }));\n      }\n    })();\n  }, [source]);\n  if (!source?.headers) {\n    return source;\n  }\n  if (!objectURL) {\n    // Avoid fetching a URL without headers if we have headers\n    return null;\n  }\n  return { ...source, uri: objectURL };\n}\n"]}